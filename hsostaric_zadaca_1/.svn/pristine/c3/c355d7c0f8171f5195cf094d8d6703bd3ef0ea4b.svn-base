/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.foi.nwtis.hsostaric.zadaca_1;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.net.Socket;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

/**
 *
 * @author Hrvoje Šoštarić
 */
public class KorisnikAviona {

    public Socket socket;

    public static void main(String[] args) {

        KorisnikAviona korisnikAviona = new KorisnikAviona();
        korisnikAviona.Pokreni(args);
    }

    public void Pokreni(String[] args) {
       
        String naredba;
              try {
            String ulazniParametri = pretvoriUlazneParametreUString(args);
            provijeriRegex(ulazniParametri);
            if(ulazniParametri.contains(",")){
                args=ulazniParametri.split(" ");
            }
            naredba = vratiKomanduZaServer(args, ulazniParametri);
            System.out.println("Naredba: " + naredba);
            try {
                socket = new Socket(args[6], Integer.parseInt(args[8]));
                komunicirajSaServerom(naredba);
                socket.close();
            } catch (IOException ex) {
                System.out.println("Došlo je do greške " + ex);
            }

        } catch (NumberFormatException ex) {
                System.out.println("Došlo je do greške: "+ex);
        }
    }

    String pretvoriUlazneParametreUString(String[] args) {
        StringBuilder ulaz = new StringBuilder();
        for (String zapis : args) {
            ulaz.append(zapis).append(" ");
        }
        
        return ulaz.toString().trim();
    }

    static void provijeriRegex(String ulaz) {
        String ulazniIzraz = "^KorisnikAviona (-k [\\w\\-]{3,10}) (-l ([\\-\\!\\#a-zA-Z0-9]){3,10}) (-s (((?:[0-9]{1,3}\\.){3}[0-9]{1,3})"
                + "|([\\w\\.]+))) (-p 8[0-9][0-9][0-9]) (--kraj|--dodajDretve ([1-9]|[1][0-9]|20)|(--uzletio AerodromPolazište:"
                + " ([\\w\\-]+), AerodromOdredište: ([\\w\\-]+), Avion: ([\\w\\-]+), trajanjeLeta: ([1-9]+))|(--ispis [\\w-]+))$";
        Pattern pattern = Pattern.compile(ulazniIzraz);
        Matcher m = pattern.matcher(ulaz);
        if (!m.find()) {
            System.err.println("Ulazni parametri ne odgovaraju zadanom izrazu ");
            System.exit(0);
        }
    }

    String vratiKomanduZaServer(String[] ulaz, String ulazniPodaciUStringu) {
        String komanda;
        StringBuilder dodatak = new StringBuilder();
        komanda = "KORISNIK " + ulaz[2] + "; LOZINKA " + ulaz[4] + ";";
        if (postojanostArgumenta(ulazniPodaciUStringu, "--kraj")) {
            dodatak.append(" KRAJ;");
        } else if (postojanostArgumenta(ulazniPodaciUStringu, "--dodajDretve")) {
            dodatak.append(" DODAJ ").append(ulaz[10]).append(";");
        } else if (postojanostArgumenta(ulazniPodaciUStringu, "--uzletio")) {
            dodatak.append(" UZLETIO ").append(ulaz[15].replace(",", "")).append("; POLAZIŠTE ").append(ulaz[11].replace(",", ""))
                    .append("; ODREDIŠTE ").append(ulaz[13].replace(",", "")).append("; TRAJANJE ").append(ulaz[17]).append(";");
        } else if (postojanostArgumenta(ulazniPodaciUStringu, "--ispis")) {
            dodatak.append(" ISPIS ").append(ulaz[10]).append(";");
        } else {
            System.err.println("Došlo je do greške");
            System.exit(0);
        }
        return komanda + dodatak.toString();
    }

    boolean postojanostArgumenta(String tekst, String argument) {
        return (tekst.contains(argument));
    }

    void komunicirajSaServerom(String komanda) throws IOException {
        String red;
        try (OutputStreamWriter osw = new OutputStreamWriter(socket.getOutputStream(), "UTF-8")) {
            osw.write(komanda);
            osw.flush();
            System.out.println("poslana je naredba: "+komanda);
        }
        socket.shutdownOutput();
        try (BufferedReader reader = new BufferedReader(new InputStreamReader(socket.getInputStream(), "UTF-8"))) {
            while ((red = reader.readLine()) != null) {
                System.out.println(red);
            }
        }
        socket.shutdownInput();
    }
}
